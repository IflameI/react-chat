{"version":3,"sources":["axios/axios.js","types/dialogsReduxTypes.ts","redux/actions/dialogs.ts","types/messagesTypes.ts","redux/actions/messages.ts","types/userReduxTypes.ts","redux/actions/user.ts","redux/actions/index.ts","redux/typeHooks/useActions.ts","redux/typeHooks/useTypedSelector.ts","components/Header.tsx","utils/helpers/hooks/usePartner.ts","components/MainContent/MainContent.tsx","components/MainContent/Dialogs/DialogsListWrapper.tsx","components/MainContent/Dialogs/DialogsListItem.tsx","socket/socket.js","components/MainContent/Dialogs/DialogsList.tsx","components/MainContent/Messages/MessagesWrapper.tsx","components/MainContent/Messages/MessagesItem.tsx","components/MainContent/Messages/MessagesItems.tsx","components/MainContent/Messages/MessagesInputPanel.tsx","components/Auth/Auth.tsx","components/Auth/Login.tsx","components/Auth/Register.tsx","components/Auth/WrapperRegister.tsx","utils/validate.js","components/Auth/WrapperAuth.tsx","components/helpersComponents/Loader.tsx","components/Auth/CheckEmailInfo.tsx","components/helpersComponents/StatusReadIcon.tsx","components/helpersComponents/Avatar.tsx","components/helpersComponents/Modal.tsx","utils/helpers/generateAvatarFromHash.ts","utils/helpers/hooks/useTime.ts","assets/img/PlayIcon.tsx","App.tsx","redux/reducers/dialogs.ts","redux/reducers/messages.ts","redux/reducers/user.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["axios","defaults","baseURL","window","location","origin","headers","common","localStorage","token","dialogsActionType","messagesActionType","setCurrentDialog","payload","type","SET_CURRENT_DIALOG","fetchDialogs","dispatch","a","get","response","FETCH_DIALOGS_SUCCESS","data","FETCH_DIALOGS_ERROR","userActionsType","addMessage","message","ADD_MESSAGE","fetchSendMessage","text","dialogId","post","dialog_id","fetchMessages","id","FETCH_MESSAGES_PENDING","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_ERROR","setUserData","SET_USER_DATA_SUCCESS","setIsAuth","SET_IS_AUTH","fetchUserData","status","SET_USER_DATA_ERROR","fetchUserLogin","postData","alert","fetchUserRegister","console","log","dialogsActionCreators","messagesActionCreators","userActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","Header","state","dialogs","currentDialogsId","items","partner","currentDialogObj","filter","item","_id","author","usePartner","user","length","className","fullname","MainContent","DialogsListWrapper","loading","error","DialogsListItem","lastMessage","isMe","time","useTime","updatedAt","to","classNames","isRead","read","socket","io","replace","DialogsList","useState","inputValue","setInputValue","Array","from","filtredItems","setFiltredItems","modalActive","setModalActive","messageText","setMessageText","onChangeInput","value","dialog","toLowerCase","indexOf","useEffect","on","removeListener","style","textAlign","onClick","xmlns","width","height","viewBox","d","onChange","e","target","placeholder","orderBy","map","MessagesWrapper","messages","dialogsRef","useRef","onNewMessage","current","scrollTo","scrollHeight","ref","MessagesItem","MessagesItems","index","MessagesInputPanel","togglePicker","setTogglePicker","setValue","emojiRef","handleSendMessage","preventDefault","onSendMessage","handleOutsideClick","path","composedPath","includes","document","body","addEventListener","onSubmit","onKeyDown","key","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","groupNames","smileys_people","native","src","alt","Auth","history","exact","Login","props","values","errors","touched","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","name","onBlur","email","password","disabled","Register","password_2","WrapperRegister","withFormik","mapPropsToValues","initialEmail","initialPassword","validate","isAuth","setSubmitting","then","code","push","displayName","rules","test","Object","keys","forEach","WrapperAuth","enableReinitialize","Loader","renderTextInfo","hash","verified","title","CheckEmailInfo","search","split","setVerified","checking","setChecking","info","setInfo","setStatus","catch","StatusReadIcon","fillRule","clipRule","Avatar","avatar","isOnline","generateAvatarFromHash","color","colorLighten","authorFirstCharName","background","Modal","valueSearch","setValueSearch","users","setUsers","isModalLoading","setIsModalLoading","onChangeSearch","result","onAddDialog","active","stopPropagation","substr","char","number","charCodeAt","r","g","b","tinycolor","lighten","saturate","toHexString","isToday","Date","format","locale","ruLocale","App","useHistory","useLocation","pathname","pop","render","initialState","rootReducer","combineReducers","action","FETCH_DIALOGS_PENDING","SET_USER_DATA_PENDING","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e12eb219.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = window.location.origin;\r\naxios.defaults.headers.common['token'] = window.localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;\r\n","export interface dialogsState {\r\n  items: any;\r\n  loading: boolean;\r\n  error: string;\r\n  currentDialogsId: any;\r\n}\r\n\r\nexport enum dialogsActionType {\r\n  FETCH_DIALOGS_PENDING = 'FETCH_DIALOGS_PENDING',\r\n  FETCH_DIALOGS_SUCCESS = 'FETCH_DIALOGS_SUCCESS',\r\n  FETCH_DIALOGS_ERROR = 'FETCH_DIALOGS_ERROR',\r\n  SET_CURRENT_DIALOG = 'SET_CURRENT_DIALOG',\r\n}\r\n\r\ninterface fetchPendingDialogsActionType {\r\n  type: dialogsActionType.FETCH_DIALOGS_PENDING;\r\n}\r\n\r\ninterface fetchDialogsSuccessType {\r\n  type: dialogsActionType.FETCH_DIALOGS_SUCCESS;\r\n  payload: any[];\r\n}\r\ninterface fetchDialogsErrorType {\r\n  type: dialogsActionType.FETCH_DIALOGS_ERROR;\r\n  payload: string;\r\n}\r\ninterface setCurrentDialogType {\r\n  type: dialogsActionType.SET_CURRENT_DIALOG;\r\n  payload: string;\r\n}\r\n\r\nexport type dialogsActions =\r\n  | fetchPendingDialogsActionType\r\n  | fetchDialogsSuccessType\r\n  | fetchDialogsErrorType\r\n  | setCurrentDialogType;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from '../../axios/axios';\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { dialogsActions, dialogsActionType } from '../../types/dialogsReduxTypes';\r\n\r\nexport const setCurrentDialog = (payload: any): dialogsActions => {\r\n  return { type: dialogsActionType.SET_CURRENT_DIALOG, payload };\r\n};\r\n\r\nexport const fetchDialogs = () => {\r\n  return async (dispatch: Dispatch<dialogsActions>) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/dialogs');\r\n      dispatch({ type: dialogsActionType.FETCH_DIALOGS_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: dialogsActionType.FETCH_DIALOGS_ERROR,\r\n        payload: 'Произошла ошибка при загрузке сообщений',\r\n      });\r\n    }\r\n  };\r\n};\r\n","export interface messagesState {\r\n  loading: boolean;\r\n  error: boolean;\r\n  items: any;\r\n}\r\n\r\nexport enum messagesActionType {\r\n  FETCH_MESSAGES_PENDING = 'FETCH_MESSAGES_PENDING',\r\n  FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS',\r\n  FETCH_MESSAGES_ERROR = 'FETCH_MESSAGES_ERROR',\r\n  SET_MESSAGE = 'SET_MESSAGE',\r\n  ADD_MESSAGE = 'ADD_MESSAGE',\r\n}\r\n\r\ninterface addMessageActionType {\r\n  type: messagesActionType.ADD_MESSAGE;\r\n  payload: any;\r\n}\r\n\r\ninterface fetchPendingMessagesActionType {\r\n  type: messagesActionType.FETCH_MESSAGES_PENDING;\r\n}\r\n\r\ninterface fetchMessagesSuccessType {\r\n  type: messagesActionType.FETCH_MESSAGES_SUCCESS;\r\n  payload: any[];\r\n}\r\ninterface fetchMessagesErrorType {\r\n  type: messagesActionType.FETCH_MESSAGES_ERROR;\r\n}\r\ninterface setCurrentMessageType {\r\n  type: messagesActionType.SET_MESSAGE;\r\n  payload: string;\r\n}\r\nexport type messagesActions =\r\n  | fetchPendingMessagesActionType\r\n  | fetchMessagesSuccessType\r\n  | fetchMessagesErrorType\r\n  | setCurrentMessageType\r\n  | addMessageActionType;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from '../../axios/axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { messagesActions, messagesActionType } from '../../types/messagesTypes';\r\n\r\nexport const addMessage = (message: any): messagesActions => {\r\n  return { type: messagesActionType.ADD_MESSAGE, payload: message };\r\n};\r\n\r\nexport const fetchSendMessage = (text: string, dialogId: string) => {\r\n  return async () => {\r\n    await axios.post(`http://localhost:3000/messages`, {\r\n      text: text,\r\n      dialog_id: dialogId,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchMessages = (id: string) => {\r\n  return async (dispatch: Dispatch<messagesActions>) => {\r\n    try {\r\n      dispatch({ type: messagesActionType.FETCH_MESSAGES_PENDING });\r\n      const response = await axios.get(`http://localhost:3000/messages?dialog=` + id);\r\n      dispatch({ type: messagesActionType.FETCH_MESSAGES_SUCCESS, payload: response.data });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: messagesActionType.FETCH_MESSAGES_ERROR,\r\n      });\r\n    }\r\n  };\r\n};\r\n","export interface userState {\r\n  data: any;\r\n  token: string;\r\n  isAuth: boolean;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\nexport enum userActionsType {\r\n  SET_USER_DATA_SUCCESS = 'SET_USER_DATA',\r\n  SET_IS_AUTH = 'SET_IS_AUTH',\r\n  SET_USER_DATA_PENDING = 'SET_USER_DATA_PENDING',\r\n  SET_USER_DATA_ERROR = 'SET_USER_DATA_ERROR',\r\n}\r\n\r\ninterface setUserIsAuthType {\r\n  type: userActionsType.SET_IS_AUTH;\r\n  payload: any;\r\n}\r\n\r\ninterface setUserDataPendingType {\r\n  type: userActionsType.SET_USER_DATA_PENDING;\r\n}\r\n\r\ninterface setUserDataErrorType {\r\n  type: userActionsType.SET_USER_DATA_ERROR;\r\n  payload: string;\r\n}\r\n\r\ninterface setUserDataSuccessType {\r\n  type: userActionsType.SET_USER_DATA_SUCCESS;\r\n  payload: any;\r\n}\r\n\r\nexport type userActions =\r\n  | setUserDataPendingType\r\n  | setUserDataSuccessType\r\n  | setUserDataErrorType\r\n  | setUserIsAuthType;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport axios from '../../axios/axios';\r\n\r\nimport { Dispatch } from 'redux';\r\nimport { userActions, userActionsType } from '../../types/userReduxTypes';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    axios: any;\r\n  }\r\n}\r\n\r\nexport const setUserData = (payload: any): userActions => {\r\n  return { type: userActionsType.SET_USER_DATA_SUCCESS, payload };\r\n};\r\n\r\nexport const setIsAuth = (payload: boolean): userActions => {\r\n  return { type: userActionsType.SET_IS_AUTH, payload };\r\n};\r\n\r\nexport const fetchUserData = () => {\r\n  return async (dispatch: Dispatch<userActions>) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/user/me');\r\n\r\n      dispatch(setUserData(response.data));\r\n    } catch (e) {\r\n      if (e.response.status === 403) {\r\n        dispatch({\r\n          type: userActionsType.SET_USER_DATA_ERROR,\r\n          payload: 'Во время авторизации произошла ошибка',\r\n        });\r\n        dispatch(setIsAuth(false));\r\n        delete window.localStorage.token;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserLogin = (postData: any) => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/user/signin', postData);\r\n      const { token } = response.data;\r\n\r\n      window.axios.defaults.headers.common['token'] = token;\r\n      window.localStorage['token'] = token;\r\n\r\n      dispatch(fetchUserData());\r\n      dispatch(setIsAuth(true));\r\n      return response.data;\r\n    } catch ({ response }) {\r\n      if (response.status == 403) {\r\n        alert('Неверный логин или пароль');\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserRegister = (postData: any) => {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/user/signup', postData);\r\n      return response;\r\n    } catch (e) {\r\n      console.log('Ошибка');\r\n    }\r\n  };\r\n};\r\n","import * as dialogsActionCreators from './dialogs';\r\nimport * as messagesActionCreators from './messages';\r\nimport * as userActionCreators from './user';\r\n\r\nexport default {\r\n  ...dialogsActionCreators,\r\n  ...messagesActionCreators,\r\n  ...userActionCreators,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport ActionCreators from '../actions';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../reducers';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport { useTypedSelector } from '../redux/typeHooks/useTypedSelector';\r\nimport { usePartner } from '.';\r\nconst Header: React.FC = () => {\r\n  const { currentDialogsId, items } = useTypedSelector((state) => state.dialogs);\r\n  const { data } = useTypedSelector((state) => state.user);\r\n  const { partner } = usePartner(items, currentDialogsId, data);\r\n\r\n  if (!items.length || !currentDialogsId) {\r\n    return (\r\n      <header className='header'>\r\n        <div className='container'>\r\n          <div className='header__row'>\r\n            <div className='header__logo'>react-chat</div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n  return (\r\n    <header className='header'>\r\n      <div className='container'>\r\n        <div className='header__row'>\r\n          <div className='header__logo'>Telegram</div>\r\n          <div className='header__name'>{partner.fullname}</div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport default function usePartner(items: any, currentDialogsId: any, data: any) {\r\n  const currentDialogObj = items.filter((item: any) => item._id === currentDialogsId)[0];\r\n\r\n  let partner: any = {};\r\n  if (data) {\r\n    if (currentDialogObj && currentDialogObj.author._id === data._id) {\r\n      partner = currentDialogObj.partner;\r\n    } else if (currentDialogObj) {\r\n      partner = currentDialogObj.author;\r\n    }\r\n  }\r\n\r\n  return {\r\n    partner,\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport { Header, DialogsListWrapper, MessagesWrapper } from '..';\r\nconst MainContent: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='main-content'>\r\n        <div className='container'>\r\n          <div className='main-content__row'>\r\n            <DialogsListWrapper />\r\n            <MessagesWrapper />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\nimport { useActions } from '../../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../../redux/typeHooks/useTypedSelector';\r\n\r\nimport { DialogsList } from '../..';\r\n\r\nconst DialogsListWrapper: React.FC = () => {\r\n  const { items, loading, error, currentDialogsId } = useTypedSelector((state) => state.dialogs);\r\n\r\n  const { fetchDialogs } = useActions();\r\n\r\n  return (\r\n    <div className='main-content__column main-content__column_left main-column-left'>\r\n      <div className='main-column-left__wrapper'>\r\n        <div className='main-column-left__body'>\r\n          <DialogsList\r\n            currentDialogsId={currentDialogsId}\r\n            loading={loading}\r\n            error={error}\r\n            items={items}\r\n            fetchDialogs={fetchDialogs}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsListWrapper;\r\n","import React from 'react';\r\n\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Avatar, StatusReadIcon, useTime } from '../..';\r\nimport { IDialogsListItem } from '../../../types/dialogsListItemTypes';\r\n\r\nconst DialogsListItem: React.FC<IDialogsListItem> = ({\r\n  lastMessage,\r\n  currentDialogsId,\r\n  isMe,\r\n  author,\r\n  _id,\r\n  partner,\r\n}) => {\r\n  const { time } = useTime(lastMessage.updatedAt);\r\n  return (\r\n    <Link to={`/dialog/${_id}`}>\r\n      <div\r\n        className={classNames('main-column-left__item', {\r\n          'main-column-left__item_active': currentDialogsId === _id,\r\n        })}>\r\n        <div>\r\n          <Avatar author={isMe ? partner : author} />\r\n        </div>\r\n        <div className='main-column-left__info'>\r\n          <div className='main-column-left__top'>\r\n            <div className='main-column-left__name'>\r\n              {isMe ? partner.fullname : author.fullname}\r\n            </div>\r\n            <div className='main-column-left__time'>{time}</div>\r\n          </div>\r\n          <div className='main-column-left__bottom'>\r\n            <div className='main-column-left__text'>{lastMessage.text}</div>\r\n            <div className='main-column-left__checked'>\r\n              {<StatusReadIcon isMe={isMe} isRead={lastMessage.read} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default DialogsListItem;\r\n","import io from 'socket.io-client';\r\n\r\nconst socket = io(window.location.origin.replace('3000', '3003'));\r\n\r\nexport default socket;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { orderBy } from 'lodash';\r\n\r\nimport { itemsData } from '../../../types/itemsDataTypes';\r\nimport { DialogsListItem, Modal, Loader } from '../..';\r\nimport socket from '../../../socket/socket';\r\nimport { useTypedSelector } from '../../../redux/typeHooks/useTypedSelector';\r\n\r\ninterface IDialogsList {\r\n  items: itemsData[];\r\n  loading: boolean;\r\n  error: string;\r\n  currentDialogsId: string;\r\n  fetchDialogs: () => void;\r\n}\r\n\r\nconst DialogsList: React.FC<IDialogsList> = ({\r\n  items,\r\n  loading,\r\n  currentDialogsId,\r\n  error,\r\n  fetchDialogs,\r\n}) => {\r\n  const { data } = useTypedSelector((state) => state.user);\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [filtredItems, setFiltredItems] = useState(Array.from(items));\r\n  const [modalActive, setModalActive] = useState<boolean>(false);\r\n  const [messageText, setMessageText] = useState<string>('');\r\n\r\n  const onChangeInput = (value = '') => {\r\n    setFiltredItems(\r\n      items.filter(\r\n        (dialog: any) =>\r\n          dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\r\n          dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0,\r\n      ),\r\n    );\r\n    setInputValue(value);\r\n  };\r\n\r\n  (window as any).fetchDialogs = fetchDialogs;\r\n\r\n  useEffect(() => {\r\n    if (items.length) {\r\n      onChangeInput();\r\n    }\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    fetchDialogs();\r\n    socket.on('SERVER:DIALOG_CREATED', fetchDialogs);\r\n    socket.on('SERVER:NEW_MESSAGE', fetchDialogs);\r\n\r\n    return () => {\r\n      socket.removeListener('SERVER:DIALOG_CREATED', fetchDialogs);\r\n      socket.removeListener('SERVER:NEW_MESSAGE', fetchDialogs);\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  } else if (error) {\r\n    return <div style={{ textAlign: 'center' }}>{error}</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <div className='main-column-left__header'>\r\n        <div className='main-column-left__top top-main-column'>\r\n          <div className='top-main-column__text'>Список диалогов</div>\r\n          <div className='top-main-column__icon'>\r\n            <button onClick={() => setModalActive(true)}>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='100%'\r\n                height='100%'\r\n                viewBox='0 0 24 24'>\r\n                <path d='M10 13h-4v-1h4v1zm2.318-4.288l3.301 3.299-4.369.989 1.068-4.288zm11.682-5.062l-7.268 7.353-3.401-3.402 7.267-7.352 3.402 3.401zm-6 8.916v.977c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362v-20h14.056l1.977-2h-18.033v24h10.189c3.163 0 9.811-7.223 9.811-9.614v-3.843l-2 2.023z' />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='main-column-left__input'>\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => onChangeInput(e.target.value)}\r\n            placeholder='Поиск'></input>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        modalActive={modalActive}\r\n        setModalActive={setModalActive}\r\n        setMessageText={setMessageText}\r\n        messageText={messageText}\r\n      />\r\n      {filtredItems.length ? (\r\n        orderBy(filtredItems, ['created_at'], ['desc']).map((filtredItems: any) => (\r\n          <DialogsListItem\r\n            currentDialogsId={currentDialogsId}\r\n            key={filtredItems._id}\r\n            isMe={data && data._id === filtredItems.author.id}\r\n            {...filtredItems}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className='main-column-left__unknown'>Пользователь не найден</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DialogsList;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { useActions } from '../../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../../redux/typeHooks/useTypedSelector';\r\nimport { MessagesItems, Loader } from '../..';\r\nimport socket from '../../../socket/socket';\r\n\r\ninterface Idata {\r\n  dialog: {\r\n    _id: string;\r\n  };\r\n}\r\n\r\nconst MessagesWrapper: React.FC = () => {\r\n  const { fetchMessages, addMessage } = useActions();\r\n\r\n  const { items, loading, error } = useTypedSelector((state) => state.messages);\r\n  const { currentDialogsId } = useTypedSelector((state) => state.dialogs);\r\n\r\n  const dialogsRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  const onNewMessage = (data: Idata) => {\r\n    if (currentDialogsId === data.dialog._id) {\r\n      addMessage(data);\r\n    }\r\n  };\r\n``\r\n  useEffect(() => {\r\n    if (currentDialogsId) {\r\n      fetchMessages(currentDialogsId);\r\n    }\r\n    socket.on('SERVER:NEW_MESSAGE', onNewMessage);\r\n\r\n    return () => {\r\n      socket.removeListener('SERVER:NEW_MESSAGE', onNewMessage);\r\n    };\r\n  }, [currentDialogsId]);\r\n\r\n  useEffect(() => {\r\n    if (dialogsRef.current) {\r\n      dialogsRef.current.scrollTo(0, dialogsRef.current.scrollHeight);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className='main-content__column main-content__column_right'>\r\n      <div ref={dialogsRef} className='main-content__wrapper'>\r\n        <div className='main-content__dialogs dialogs-content'>\r\n          <div className='dialogs-content__messages-wrapper'>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MessagesItems currentDialogsId={currentDialogsId} items={items} error={error} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesWrapper;\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport React from 'react';\r\n\r\nimport { Avatar, useTime } from '../..';\r\nimport { userType } from '../../../types/messagesItemTypes';\r\n\r\ninterface IMessages {\r\n  avatar: string;\r\n  text: string;\r\n  audio: string;\r\n  user: userType;\r\n  isMe: boolean;\r\n  updatedAt: string;\r\n}\r\n\r\nconst MessagesItem: React.FC<IMessages> = ({ text, user, updatedAt }) => {\r\n  const { time } = useTime(updatedAt);\r\n  return (\r\n    <>\r\n      <div className='dialogs-content__message'>\r\n        <div className='dialogs-content__info'>\r\n          <div className='dialogs-content__img avatar'>\r\n            <Avatar author={user} />\r\n          </div>\r\n          <div className='dialogs-content__name'>{user.fullname}</div>\r\n          <div className='main-column-left__time'>{time}</div>\r\n        </div>\r\n        <div className='dialogs-content__main'>\r\n          <p className='dialogs-content__text'>{text}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesItem;\r\n","import React from 'react';\r\nimport { useTypedSelector } from '../../../redux/typeHooks/useTypedSelector';\r\nimport { MessagesItem, MessagesInputPanel } from '../..';\r\n\r\ninterface IMessagesItems {\r\n  items: any[];\r\n  currentDialogsId: string;\r\n  error: boolean;\r\n}\r\n\r\nconst MessagesItems: React.FC<IMessagesItems> = ({ items, currentDialogsId, error }) => {\r\n  const { data } = useTypedSelector((state) => state.user);\r\n  if (error) {\r\n    return (\r\n      <div className='main-content__void-messages'>\r\n        <div className='main-content__text'>Произошла ошибка</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentDialogsId) {\r\n    return (\r\n      <div className='main-content__void-messages'>\r\n        <div className='main-content__text'>Пожалуйста откройте диалог</div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {data &&\r\n        items.map((item: any, index: number) => (\r\n          <MessagesItem\r\n            isMe={data._id === item.dialog.author}\r\n            user={item.user}\r\n            key={`${item.user._id}_${index}`}\r\n            {...item}\r\n          />\r\n        ))}\r\n      <MessagesInputPanel />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesItems;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Picker from 'emoji-picker-react';\r\nimport { useActions } from '../../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../../redux/typeHooks/useTypedSelector';\r\n\r\ntype emojiObject = {\r\n  emoji: string;\r\n};\r\n\r\nconst MessagesInputPanel: React.FC = () => {\r\n  const [togglePicker, setTogglePicker] = useState<boolean>(false);\r\n  const [value, setValue] = useState<string>('');\r\n  const { currentDialogsId } = useTypedSelector((state) => state.dialogs);\r\n\r\n  const { fetchSendMessage } = useActions();\r\n\r\n  const emojiRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  const onEmojiClick = (event: React.MouseEvent, emojiObject: emojiObject) => {\r\n    setValue(value + emojiObject.emoji);\r\n  };\r\n\r\n  const onTogglePicker = () => {\r\n    setTogglePicker(!togglePicker);\r\n  };\r\n\r\n  const onSendMessage = (value: string, currentDialogsId: string) => {\r\n    fetchSendMessage(value, currentDialogsId);\r\n  };\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSendMessage(value, currentDialogsId);\r\n    setValue('');\r\n  };\r\n  const handleKeyDown = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleSendMessage(e);\r\n    }\r\n  };\r\n\r\n  const handleOutsideClick = (e: any) => {\r\n    const path = e.path || (e.composedPath && e.composedPath());\r\n    if (!path.includes(emojiRef.current)) {\r\n      setTogglePicker(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n  }, []);\r\n  return (\r\n    <div className='dialogs-content__panel'>\r\n      <div className='dialogs-content__panel-content'>\r\n        <form onSubmit={handleSendMessage}>\r\n          <div className='dialogs-content__send-message'>\r\n            <textarea\r\n              value={value}\r\n              onChange={(e) => setValue(e.target.value)}\r\n              placeholder='Введите сообщение'\r\n              onKeyDown={handleKeyDown}></textarea>\r\n            <div ref={emojiRef} className='dialogs-content__emoji'>\r\n              <button type='button' onClick={onTogglePicker}>\r\n                <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\r\n                  <path d='M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.507 13.941c-1.512 1.195-3.174 1.931-5.506 1.931-2.334 0-3.996-.736-5.508-1.931l-.493.493c1.127 1.72 3.2 3.566 6.001 3.566 2.8 0 4.872-1.846 5.999-3.566l-.493-.493zm-9.007-5.941c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5zm7 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5z' />\r\n                </svg>\r\n              </button>\r\n              {togglePicker && (\r\n                <div className='dialogs-content__emoji-wrapper'>\r\n                  <Picker\r\n                    onEmojiClick={onEmojiClick}\r\n                    disableAutoFocus={true}\r\n                    groupNames={{ smileys_people: 'PEOPLE' }}\r\n                    native\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className='dialogs-content__bottom'>\r\n              <div className='dialogs-content__micro'>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='24'\r\n                  height='24'\r\n                  viewBox='0 0 24 24'></svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='dialogs-content__button'>\r\n            <button type='submit' className='avatar'>\r\n              <img\r\n                src='https://b.thumbs.redditmedia.com/tjmTLdN1v49BUWeI1q2xtY5mdMG5bV-A2ks1CksPZbA.png'\r\n                alt=''></img>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesInputPanel;\r\n","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { CheckEmailInfo, WrapperRegister, WrapperAuth } from '..';\r\nimport { History } from 'history';\r\n\r\ninterface IAuth {\r\n  fetchUserLogin: any;\r\n  fetchUserRegister: any;\r\n  history: History;\r\n}\r\n\r\nconst Auth: React.FC<IAuth> = ({ fetchUserLogin, fetchUserRegister, history }) => {\r\n  return (\r\n    <>\r\n      <Route exact path='/signin'>\r\n        <WrapperAuth fetchUserLogin={fetchUserLogin} history={history} />\r\n      </Route>\r\n      <Route exact path='/signup'>\r\n        <WrapperRegister fetchUserRegister={fetchUserRegister} history={history} />\r\n      </Route>\r\n      <Route exact path='/signup/verify'>\r\n        <CheckEmailInfo history={history} />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FormikProps } from 'formik';\r\n\r\nimport { FormValues } from '../../types/types';\r\n\r\nconst Login = (props: FormikProps<FormValues>) => {\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, isSubmitting } =\r\n    props;\r\n  return (\r\n    <div className='auth'>\r\n      <div className='container'>\r\n        <div className='auth__row'>\r\n          <div className='auth__top'>\r\n            <div className='auth__title'>Войти в аккаунт</div>\r\n            <div className='auth__text'>Пожалуйста, войдите в свой аккаунт</div>\r\n          </div>\r\n          <form onSubmit={handleSubmit} className='auth__body'>\r\n            <div className='auth__item'>\r\n              <div className='auth__functional'>\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='email'\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    placeholder='E-mail'\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }></input>\r\n                </div>\r\n                {errors.email && touched.email && (\r\n                  <div className='input-feedback'>{errors.email}</div>\r\n                )}\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='password'\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                    placeholder='Пароль'\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }></input>\r\n                </div>\r\n                {errors.password && touched.password && (\r\n                  <div className='input-feedback'>{errors.password}</div>\r\n                )}\r\n                <div className='auth__button'>\r\n                  {!isValid && (\r\n                    <span className='auth__form-error'>Форма заполнена неправильно</span>\r\n                  )}\r\n                  <button\r\n                    onClick={() => {\r\n                      handleSubmit;\r\n                    }}\r\n                    disabled={\r\n                      isSubmitting ||\r\n                      !!(errors.email && touched.email) ||\r\n                      !!(errors.password && touched.password)\r\n                    }>\r\n                    Войти в аккаунт\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className='auth__subtext'>\r\n                <NavLink exact to='/signup'>\r\n                  Зарегистрироваться\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FormikProps } from 'formik';\r\n\r\nimport { FormValues } from '../../types/types';\r\n\r\nconst Register = (props: FormikProps<FormValues>) => {\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, isSubmitting } =\r\n    props;\r\n  return (\r\n    <div className='auth'>\r\n      <div className='container'>\r\n        <div className='auth__row'>\r\n          <div className='auth__top'>\r\n            <div className='auth__title'>Регистрация</div>\r\n            <div className='auth__text'>Для входа в чат, вам нужно зарегистрироваться</div>\r\n          </div>\r\n          <form onSubmit={handleSubmit} className='auth__body'>\r\n            <div className='auth__item'>\r\n              <div className='auth__functional'>\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='email'\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    placeholder='E-mail'\r\n                    className={\r\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                    }></input>\r\n                </div>\r\n                {errors.email && touched.email && (\r\n                  <div className='input-feedback'>{errors.email}</div>\r\n                )}\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='fullname'\r\n                    type='text'\r\n                    name='fullname'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.fullname}\r\n                    placeholder='Ваше имя и фамилия'\r\n                    className='text-input'></input>\r\n                </div>\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='password'\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                    placeholder='Пароль'\r\n                    className={\r\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                    }></input>\r\n                </div>\r\n                {errors.password && touched.password && (\r\n                  <div className='input-feedback'>{errors.password}</div>\r\n                )}\r\n                <div className='auth__input'>\r\n                  <input\r\n                    id='password_2'\r\n                    type='password'\r\n                    name='password_2'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password_2}\r\n                    placeholder='Повторите пароль'\r\n                    className={\r\n                      errors.password_2 && touched.password_2 ? 'text-input error' : 'text-input'\r\n                    }></input>\r\n                </div>\r\n                {errors.password_2 && touched.password_2 && (\r\n                  <div className='input-feedback'>{errors.password_2}</div>\r\n                )}\r\n                <div className='auth__button'>\r\n                  {!isValid && (\r\n                    <span className='auth__form-error'>Форма заполнена неправильно</span>\r\n                  )}\r\n                  <button\r\n                    type='submit'\r\n                    onClick={(event: React.MouseEvent<HTMLElement>) => {\r\n                      handleSubmit;\r\n                    }}\r\n                    disabled={\r\n                      isSubmitting ||\r\n                      !!(errors.email && touched.email) ||\r\n                      !!(errors.password && touched.password)\r\n                    }>\r\n                    ЗАРЕГИСТРИРОВАТЬСЯ\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className='auth__subtext'>\r\n                <NavLink exact to='/signin'>\r\n                  Войти в аккаунт\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { FormValues, MyFormProps } from '../../types/types';\r\nimport { Register, validate } from '..';\r\n\r\nimport { withFormik } from 'formik';\r\n\r\ntype errorsType = {\r\n  email?: string;\r\n  password?: string | number;\r\n  fullname?: string;\r\n  password_2?: string | number;\r\n};\r\n\r\nconst WrapperRegister = withFormik<MyFormProps, FormValues>({\r\n  mapPropsToValues: (props) => ({\r\n    email: props.initialEmail || '',\r\n    fullname: props.fullname || '',\r\n    password: props.initialPassword || '',\r\n    password_2: props.initialPassword || '',\r\n  }),\r\n\r\n  validate: (values) => {\r\n    const errors: errorsType = {};\r\n\r\n    validate({ isAuth: false, values, errors });\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    props.fetchUserRegister(values).then((data: any) => {\r\n      if (data.data.code === 11000) {\r\n        alert('Пользователь с такой почтой уже зарегистрирован');\r\n      } else if (data.data.code !== 11000 && data.status === 200) {\r\n        props.history.push('/signin');\r\n      }\r\n      setSubmitting(false);\r\n    });\r\n  },\r\n  displayName: 'RegisterForm',\r\n})(Register);\r\n\r\nexport default WrapperRegister;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nexport default ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: (value) => {\r\n      if (!value) {\r\n        errors.email = 'Введите E-Mail';\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = 'Неверный E-Mail';\r\n      }\r\n    },\r\n    password: (value) => {\r\n      if (!value) {\r\n        errors.password = 'Введите пароль';\r\n      } else if (!isAuth && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)) {\r\n        errors.password = 'Слишком легкий пароль';\r\n      }\r\n    },\r\n    password_2: (value) => {\r\n      if (!isAuth && value !== values.password) {\r\n        errors.password_2 = 'Пароли не совпадают';\r\n      }\r\n    },\r\n    fullname: (value) => {\r\n      if (!isAuth && !value) {\r\n        errors.fullname = 'Укажите свое имя и фамилию';\r\n      }\r\n    },\r\n  };\r\n\r\n  Object.keys(values).forEach((key) => rules[key] && rules[key](values[key]));\r\n};\r\n","import { FormValues, MyFormProps } from '../../types/types';\r\nimport { withFormik } from 'formik';\r\nimport { Login } from '..';\r\nimport validate from '../../utils/validate';\r\n\r\ntype errorsType = {\r\n  email?: string;\r\n  password?: string | number;\r\n};\r\n\r\nconst WrapperAuth = withFormik<MyFormProps, FormValues>({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: (props) => ({\r\n    email: props.initialEmail || '',\r\n    password: props.initialPassword || '',\r\n  }),\r\n\r\n  validate: (values) => {\r\n    const errors: errorsType = {};\r\n    validate({ isAuth: true, values, errors });\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    props.fetchUserLogin(values).then((data: any) => {\r\n      if (data && data.status === 'success') {\r\n        props.history.push('/');\r\n      }\r\n      setSubmitting(false);\r\n    });\r\n  },\r\n  displayName: 'AuthForm',\r\n})(Login);\r\n\r\nexport default WrapperAuth;\r\n","import React from 'react';\r\n\r\nconst Loader: React.FC = () => {\r\n  return (\r\n    <div className='loader-wrapper'>\r\n      <div className='lds-spinner'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport Loader from '../helpersComponents/Loader';\r\nimport { History } from 'history';\r\n\r\ninterface IRenderText {\r\n  title: string;\r\n  message: string;\r\n  status: string;\r\n}\r\ninterface IRenderTextProps {\r\n  hash?: string;\r\n  verified: boolean;\r\n  checking: boolean;\r\n}\r\ninterface ICheckEmailInfo {\r\n  history: History;\r\n}\r\n\r\nconst renderTextInfo = ({ hash, verified }: IRenderTextProps): IRenderText => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: 'success',\r\n        title: 'Готово!',\r\n        message: 'Аккаунт успешно подтвержден!',\r\n      };\r\n    } else {\r\n      return {\r\n        status: 'error',\r\n        title: 'Ошибка',\r\n        message: 'Вы указали несуществующий или неверный хеш.',\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      status: 'info',\r\n      title: 'Подтвердите почту',\r\n      message: 'Ссылка с подтверждением аккаунта отправлена на E-Mail.',\r\n    };\r\n  }\r\n};\r\n\r\nconst CheckEmailInfo: React.FC<ICheckEmailInfo> = ({ history }) => {\r\n  const hash = location.search.split('hash=')[1];\r\n  const [verified, setVerified] = useState(false);\r\n  const [checking, setChecking] = useState(!!hash);\r\n  const [info, setInfo] = useState(renderTextInfo({ hash, checking, verified }));\r\n\r\n  const setStatus = ({ checking, verified }: IRenderTextProps) => {\r\n    setInfo(renderTextInfo({ hash, checking, verified }));\r\n    setVerified(verified);\r\n    setChecking(checking);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hash) {\r\n      axios\r\n        .get('http://localhost:3000/user/verify?hash=' + hash)\r\n        .then(() => {\r\n          setStatus({ verified: true, checking: false });\r\n        })\r\n        .catch(() => {\r\n          setStatus({ verified: false, checking: false });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='auth'>\r\n        <div className='container'>\r\n          <div className='auth__row'>\r\n            {!checking ? (\r\n              <div className='auth__item auth__item--check'>\r\n                <div className='auth__top'>\r\n                  <div className='auth__title'>{info.title}</div>\r\n                  <div className='auth__text'>{info.message}</div>\r\n                  {info.status === 'success' && verified && (\r\n                    <div className='auth__button'>\r\n                      <button onClick={() => history.push('/signin')}>Войти</button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Loader />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckEmailInfo;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\ninterface IStatusReadIcon {\r\n  isMe: boolean;\r\n  isRead: boolean;\r\n}\r\n\r\nconst StatusReadIcon = ({ isMe, isRead }: IStatusReadIcon) => {\r\n  return (\r\n    (isMe &&\r\n      (isRead ? (\r\n        <svg\r\n          width='100%'\r\n          height='100%'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          fillRule='evenodd'\r\n          clipRule='evenodd'>\r\n          <path d='M24 6.278l-11.16 12.722-6.84-6 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.278zm-22.681 5.232l6.835 6.01-1.314 1.48-6.84-6 1.319-1.49zm9.278.218l5.921-6.728 1.482 1.285-5.921 6.756-1.482-1.313z' />\r\n        </svg>\r\n      ) : (\r\n        <svg\r\n          width='14'\r\n          height='14'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          fillRule='evenodd'\r\n          clipRule='evenodd'>\r\n          <path d='M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z' />\r\n        </svg>\r\n      ))) ||\r\n    null\r\n  );\r\n};\r\nexport default StatusReadIcon;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { generateAvatarFromHash } from '..';\r\nimport { userData } from '../../types/itemsDataTypes';\r\n\r\ninterface IAvatar {\r\n  author: userData;\r\n}\r\n\r\nconst Avatar: React.FC<IAvatar> = ({ author }) => {\r\n  if (author.avatar) {\r\n    return (\r\n      <div\r\n        className={classNames('main-column-left__avatar avatar', {\r\n          'avatar-online': author.isOnline,\r\n        })}>\r\n        <img src={author.avatar} alt='avatar' />\r\n      </div>\r\n    );\r\n  } else {\r\n    const { color, colorLighten } = generateAvatarFromHash(author._id);\r\n    const authorFirstCharName = author.fullname[0];\r\n    return (\r\n      <div\r\n        style={{ background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)` }}\r\n        className={classNames('avatar-char', {\r\n          'avatar-online': author.isOnline,\r\n        })}>\r\n        {authorFirstCharName}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\nimport { Loader } from '../';\r\nimport { Dispatcher } from '../../types/globalTypes/setActionType';\r\n\r\ninterface IModal {\r\n  modalActive: boolean;\r\n  setModalActive: Dispatcher<boolean>;\r\n  setMessageText: Dispatcher<string>;\r\n  messageText: string;\r\n}\r\n\r\nconst Modal: React.FC<IModal> = ({ modalActive, setModalActive, setMessageText, messageText }) => {\r\n  const [valueSearch, setValueSearch] = useState<string>('');\r\n  const [users, setUsers] = useState<any>([]);\r\n  const [isModalLoading, setIsModalLoading] = useState<boolean>(false);\r\n\r\n  const onChangeSearch = async (event: any) => {\r\n    setValueSearch(event.target.value);\r\n    const result = await axios.get('http://localhost:3000/user/find?query=' + valueSearch);\r\n    setUsers(result.data);\r\n  };\r\n\r\n  const onChangeTextArea = (event: any) => {\r\n    setMessageText(event.target.value);\r\n  };\r\n\r\n  const onAddDialog = async () => {\r\n    setIsModalLoading(true);\r\n    try {\r\n      const result = await axios.post('http://localhost:3000/dialogs', {\r\n        partner: users[0].id,\r\n        text: messageText,\r\n      });\r\n      setIsModalLoading(false);\r\n      setUsers(result.data);\r\n      setModalActive(false);\r\n      setValueSearch('');\r\n      setMessageText('');\r\n    } catch (e) {}\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames('modal', {\r\n        active: modalActive,\r\n      })}\r\n      onClick={() => setModalActive(false)}>\r\n      <div\r\n        className={classNames('modal__content', {\r\n          active: modalActive,\r\n        })}\r\n        onClick={(e) => e.stopPropagation()}>\r\n        <div className='modal__wrapper'>\r\n          <div className='modal__info info-modal'>\r\n            <div className='info-modal__text'>Создать диалог</div>\r\n            <div onClick={() => setModalActive(false)} className='info-modal__close'>\r\n              X\r\n            </div>\r\n          </div>\r\n          <div className='modal__top'>\r\n            <div className='main-column-left__input'>\r\n              <label className='modal__label'>Email или имя:</label>\r\n              <input\r\n                onChange={onChangeSearch}\r\n                value={valueSearch}\r\n                placeholder='Введите email пользователя или имя'></input>\r\n            </div>\r\n          </div>\r\n          <div className='modal__middle'>\r\n            <label className='modal__label'>Сообщение:</label>\r\n            <textarea\r\n              placeholder='Введите текст сообщения'\r\n              onChange={onChangeTextArea}\r\n              value={messageText}></textarea>\r\n          </div>\r\n          <div className='modal__bottom'>\r\n            <div className='auth__button'>\r\n              <button disabled={!messageText} onClick={onAddDialog}>\r\n                Создать диалог\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=''>{isModalLoading && <Loader />}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport tinycolor from 'tinycolor2';\r\n\r\nconst getCorrectIndex = (number: number) => {\r\n  if (number > 255) {\r\n    return 255;\r\n  }\r\n  if (number < 0) {\r\n    return 0;\r\n  }\r\n  return number > 255 ? 255 : number < 0 ? 0 : number;\r\n};\r\n\r\nexport default (hash: any) => {\r\n  const [r, g, b] = hash\r\n    .substr(0, 3)\r\n    .split('')\r\n    .map((char: any) => getCorrectIndex(char.charCodeAt(0)));\r\n\r\n  return {\r\n    color: tinycolor({ r, g, b }).lighten(10).saturate(10).toHexString(),\r\n    colorLighten: tinycolor({ r, g, b }).lighten(30).saturate(30).toHexString(),\r\n  };\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { isToday, format } from 'date-fns';\r\nimport ruLocale from 'date-fns/locale/ru';\r\n\r\nexport default function useTime(updatedAt: any) {\r\n  let time;\r\n  if (isToday(new Date(updatedAt))) {\r\n    time = format(new Date(updatedAt), 'HH:mm', {\r\n      locale: ruLocale,\r\n    });\r\n  } else {\r\n    time = format(new Date(updatedAt), 'dd.MM.yyyy', {\r\n      locale: ruLocale,\r\n    });\r\n  }\r\n  return {\r\n    time,\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst PlayIcon: React.FC = () => {\r\n  return (\r\n    <svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 24 24'>\r\n      <path d='M3 22v-20l18 10-18 10z' />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PlayIcon;\r\n","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router';\nimport { useHistory } from 'react-router-dom';\n\nimport { useActions } from './redux/typeHooks/useActions';\nimport { useTypedSelector } from './redux/typeHooks/useTypedSelector';\nimport { MainContent, Auth } from './components';\n\nconst App: React.FC = () => {\n  const { isAuth } = useTypedSelector((state) => state.user);\n  const { fetchUserLogin, fetchUserRegister, fetchUserData, setCurrentDialog } = useActions();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  useEffect(() => {\n    const dialogId = location.pathname.split('/').pop();\n    if (location.pathname !== '/signin') {\n      setCurrentDialog(dialogId);\n    }\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Switch>\n        <Route exact path={['/signin', '/signup', '/signup/verify']}>\n          <Auth\n            fetchUserLogin={fetchUserLogin}\n            fetchUserRegister={fetchUserRegister}\n            history={history}\n          />\n        </Route>\n        <Route path='/' render={() => (isAuth ? <MainContent /> : <Redirect to='/signin' />)} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import { dialogsActions, dialogsActionType, dialogsState } from '../../types/dialogsReduxTypes';\r\n\r\nconst initialState: dialogsState = {\r\n  items: [],\r\n  loading: false,\r\n  error: '',\r\n  currentDialogsId: window.location.pathname.split('dialog/')[1],\r\n};\r\n\r\nexport const dialogs = (state = initialState, action: dialogsActions): dialogsState => {\r\n  switch (action.type) {\r\n    case dialogsActionType.FETCH_DIALOGS_PENDING:\r\n      return { ...state, loading: true };\r\n    case dialogsActionType.FETCH_DIALOGS_SUCCESS:\r\n      return { ...state, loading: false, items: action.payload };\r\n    case dialogsActionType.FETCH_DIALOGS_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case dialogsActionType.SET_CURRENT_DIALOG:\r\n      return { ...state, loading: false, currentDialogsId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { messagesActions, messagesActionType, messagesState } from '../../types/messagesTypes';\r\n\r\nconst initialState: messagesState = {\r\n  loading: false,\r\n  error: false,\r\n  items: [],\r\n};\r\n\r\nexport const messages = (state = initialState, action: messagesActions): messagesState => {\r\n  switch (action.type) {\r\n    case messagesActionType.FETCH_MESSAGES_PENDING:\r\n      return { ...state, loading: true, error: false };\r\n    case messagesActionType.FETCH_MESSAGES_SUCCESS:\r\n      return { ...state, loading: false, items: action.payload, error: false };\r\n    case messagesActionType.FETCH_MESSAGES_ERROR:\r\n      return { ...state, loading: false, error: true };\r\n    case messagesActionType.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { userActions, userActionsType, userState } from '../../types/userReduxTypes';\r\n\r\nconst initialState: userState = {\r\n  data: null,\r\n  token: window.localStorage.token,\r\n  isAuth: window.localStorage.token ? true : false,\r\n  loading: false,\r\n  error: '',\r\n};\r\n\r\nexport const user = (state = initialState, action: userActions): userState => {\r\n  switch (action.type) {\r\n    case userActionsType.SET_USER_DATA_PENDING:\r\n      return { ...state, loading: true };\r\n    case userActionsType.SET_IS_AUTH:\r\n      return { ...state, isAuth: action.payload, loading: false };\r\n    case userActionsType.SET_USER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isAuth: true,\r\n        token: window.localStorage.token,\r\n        loading: false,\r\n      };\r\n    case userActionsType.SET_USER_DATA_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { dialogs } from './dialogs';\r\nimport { messages } from './messages';\r\nimport { user } from './user';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages,\r\n  dialogs,\r\n  user,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n","import ReactDOM from 'react-dom';\nimport './scss/components/style.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}